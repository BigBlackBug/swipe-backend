user  nginx;
worker_processes  auto;

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 100000;

error_log  /var/log/nginx/error.log notice;

pid        /var/run/nginx.pid;

events {
    multi_accept       on;
    # worker_processes
    worker_connections  10000;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # nah, we don't need it rly
    access_log  /var/log/nginx/access.log  main;
    # access_log off;

    sendfile on;
    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;
    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # TODO not sure how this behaves with websockets
    keepalive_timeout  65;

    # reduce the data that needs to be sent over network -- for testing environment
    gzip on;
    gzip_min_length 128;
    gzip_comp_level 1;
    # cache both gzipped and regular versions
    gzip_vary on;
    gzip_types application/json;

    gzip_proxied expired no-cache no-store private auth;
    # enabling decompression for those suckers who
    # don't support compressed responses
    gunzip on;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    # I don't think we'll be getting images larger than that
    client_max_body_size 4m;
    large_client_header_buffers 4 4k;
    # necessary for WS
    map $http_upgrade $connection_upgrade {
       default upgrade;
       ''      close;
    }

    # I'm not sure, users behind NAT might suck a fat one
    # with these settings, but I'm not an admin :(
    # limit_conn_zone $binary_remote_addr zone=perip:10m;
    # limit_conn perip 10;

    include /etc/nginx/conf.d/*.conf;
}
